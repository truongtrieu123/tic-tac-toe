{"version":3,"sources":["components/square.js","components/board.js","components/history.js","components/game.js","App.js","index.js"],"names":["Square","value","onClick","isHighlight","className","style","fontWeight","color","RenderSquare","squares","index","Board","boardSize","tmp","calculateWinner","stepsCausedWin","steps","winner","pathO","pathX","i","h","k","detail","row","j","includes","push","findLocation","isNaN","parseInt","HistoryList","history","stepNumber","isAscendingOrder","sliderButtonClick","handleCurrentMoveClick","move","moves","map","step","col","desc","orderedMoves","reverse","type","name","event","handleSliderButtonClick","checked","reversed","Game","useState","setBoardSize","setIsAscendingOrder","Array","fill","setHistory","setStepNumber","xIsNext","setXIsNext","error","setError","useEffect","status","currentSquares","result","curHistory","slice","length","concat","onSubmit","preventDefault","newSize","target","changeBoardSize","defaultValue","placeholder","required","twoDimensionArray","a","countO","countX","IsWin","checkRow","checkColumn","checkAuxiliaryDiagonalLine","checkMainDiagonalLine","checkMainLowerDiagonalLine","checkMainUpperDiagonalLine","checkAuxiliaryUpperDiagonalLine","checkAuxiliaryLowerDiagonalLine","summary","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f047295d.chunk.js","sourcesContent":["import '../index';\r\n\r\nconst Square = ({value,onClick,isHighlight}) => {\r\n    return (\r\n      <button className=\"square\" onClick={onClick} style={isHighlight?{fontWeight:'bold',color:'red'}:{}}>\r\n        {value}\r\n      </button>\r\n    );\r\n}\r\n\r\nexport default Square;\r\n","import Square from './square';\r\nimport {calculateWinner} from './game';\r\n\r\nconst Board =({squares, boardSize, onClick}) => {\r\n\r\n  const tmp=calculateWinner(squares,boardSize);\r\n  let stepsCausedWin=null,steps=[];\r\n  if(tmp!==null)\r\n    if(tmp.winner==='0')\r\n      stepsCausedWin = tmp.pathO;\r\n    else if(tmp.winner==='X')\r\n      stepsCausedWin = tmp.pathX;\r\n  \r\n  if(stepsCausedWin!==null)\r\n    for(let i=0;i<5;i++){\r\n      const [h,k]=stepsCausedWin[i];\r\n      steps[i]=h*boardSize+k;\r\n    }\r\n  \r\n  let detail=[];\r\n  for(var i =0;i<boardSize;i++)\r\n  {\r\n    let row=[];\r\n    for(var j=0;j<boardSize;j++)\r\n    {\r\n      const value= boardSize*i+j;\r\n      const isHighlight=(steps.includes(value))? true: false;\r\n      row.push((RenderSquare(squares, value ,isHighlight, onClick)));\r\n    }\r\n    detail.push(<div className=\"board-row\">{row}</div>);\r\n  }\r\n  return (\r\n    <div>\r\n      {detail}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RenderSquare = (squares, index, isHighlight,onClick) => {\r\n  return (\r\n    <Square isHighlight={isHighlight}\r\n      value={squares[index]}\r\n      onClick={() => onClick(index)}\r\n      key={'square '+ index}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport default Board;","\r\n\r\nconst  HistoryList = ({history, stepNumber, isAscendingOrder, boardSize, onClick, sliderButtonClick})=>\r\n{\r\n    const handleCurrentMoveClick=(move)=>\r\n    {\r\n        onClick(move);\r\n    }\r\n\r\n    const handleSliderButtonClick=(event)=>\r\n    {\r\n        sliderButtonClick(event);\r\n    }\r\n\r\n    const moves = history.map((step, move) => {\r\n        const [row,col]=findLocation(step.index,boardSize);\r\n        const desc = move ?\r\n        'Go to move #' + move +'('+row+','+col+')':\r\n        'Go to game start';\r\n        return (\r\n        <li key={move}>\r\n            <button style={stepNumber===move?{fontWeight:'bold'}:{}} onClick={()=> handleCurrentMoveClick(move)}>{desc}</button>\r\n        </li>\r\n        );\r\n    });\r\n    const orderedMoves= !isAscendingOrder?moves.reverse():moves;\r\n\r\n    return(\r\n        <div>\r\n        <label className=\"switch\">\r\n            <input type=\"checkbox\" name=\"orderSlider\" onClick={(event)=>handleSliderButtonClick(event)} checked={isAscendingOrder}/>\r\n            <span className=\"slider\"></span>\r\n        </label>\r\n        <label><br/>Order (Ascending by default)</label>\r\n        <ol reversed={!isAscendingOrder}>{orderedMoves}</ol>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst findLocation = (index,boardSize) =>{\r\n\r\n  if(index===-1||isNaN(index))\r\n    return [-1,-1];\r\n  return [parseInt(index/boardSize), parseInt(index%boardSize)];\r\n}\r\n\r\nexport default HistoryList;","import React, {useState,useEffect} from 'react';\r\nimport Board from './board';\r\nimport HistoryList from './history';\r\nimport '../index.css';\r\n \r\nconst  Game = () => {\r\n    const [boardSize, setBoardSize] = useState(5);\r\n    const [isAscendingOrder, setIsAscendingOrder] = useState(true);\r\n    const [history, setHistory] = useState([\r\n        {\r\n          squares: Array(9).fill(null),\r\n          index:-1\r\n        }\r\n      ]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n      const arraySize = boardSize*boardSize;\r\n      setHistory([\r\n        {\r\n          squares: Array(arraySize).fill(null),\r\n          index:-1\r\n        }\r\n      ]);\r\n      setStepNumber(0);\r\n      setXIsNext(true);\r\n      setIsAscendingOrder(true);\r\n    }, [boardSize]);\r\n\r\n    const handleClick = (i) => {\r\n      const curHistory = history.slice(0, stepNumber + 1);\r\n      const current = curHistory[curHistory.length-1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares,boardSize) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] =xIsNext ? \"X\" : \"O\";\r\n      setHistory(\r\n        curHistory.concat([\r\n          {\r\n            squares: squares,\r\n            index:i\r\n          }\r\n        ]),\r\n      );\r\n      setStepNumber(curHistory.length);\r\n      setXIsNext(!xIsNext);\r\n    }\r\n  \r\n    const jumpTo= (step) =>{\r\n        setStepNumber(step);  \r\n        setXIsNext((step % 2) === 0);\r\n    }\r\n  \r\n    const handleOrderSlider=(event)=>\r\n    {\r\n      setIsAscendingOrder(event.target.checked);\r\n    }\r\n    \r\n    const playAgain = () => \r\n    {\r\n      setHistory([\r\n        {\r\n          squares: Array(9).fill(null),\r\n          index:-1\r\n        }\r\n      ]);\r\n      setStepNumber(0);\r\n      setXIsNext(true);\r\n      setIsAscendingOrder(true);\r\n    }\r\n\r\n    const changeBoardSize = (event) =>\r\n    {\r\n      event.preventDefault();\r\n      const newSize=parseInt(event.target.newSize.value);\r\n      if(!isNaN(newSize)){\r\n        if(newSize<5){\r\n          setError(\"Giá trị nhập >= 5\");\r\n        }\r\n        else if(newSize>20){\r\n          setError(\"Giá trị nhập <= 20\");\r\n        }\r\n        else {\r\n          setBoardSize(newSize);\r\n          setError(\"\");\r\n        }\r\n        \r\n      }\r\n        \r\n    }\r\n\r\n    const currentSquares = history[stepNumber];\r\n    const tmp = calculateWinner(currentSquares.squares,boardSize);\r\n    \r\n    let status;\r\n    if (tmp) {\r\n      status = \"Winner: \" + tmp.winner;\r\n    } else {\r\n      status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    let result='';\r\n    if(isDraw(currentSquares.squares)){\r\n      result='Draw!!';\r\n    }\r\n\r\n    return (\r\n    <div className=\"game\">\r\n        <div className=\"game-board\">\r\n            <Board \r\n                squares={currentSquares.squares}\r\n                boardSize={boardSize}\r\n                onClick={handleClick}\r\n                key={'grame-board '+stepNumber}\r\n            />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div>{result}</div>\r\n          <br/>\r\n          <form onSubmit = {(event) =>changeBoardSize(event)}>\r\n            <input type = 'text' \r\n                  name = 'newSize'\r\n                  defaultValue='5'\r\n                  placeholder='Type your board size here...' \r\n                  required/>\r\n            <br/>\r\n            <label style={{color:'red'}}>{error}</label>\r\n            <br/><br/>\r\n            <button>Render new board</button>\r\n          </form>\r\n          <br/>\r\n          <button onClick = {playAgain}>Play again</button>\r\n          <br/><br/>\r\n\r\n          <HistoryList history={history}                         \r\n                      stepNumber={stepNumber} \r\n                      isAscendingOrder={isAscendingOrder} \r\n                      boardSize={boardSize}\r\n                      onClick={jumpTo} \r\n                      sliderButtonClick={handleOrderSlider}/>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Game;\r\n  \r\nfunction isDraw(squares)\r\n{\r\n  return !squares.includes(null);\r\n}\r\n\r\nexport const  calculateWinner  = (squares, boardSize) => {\r\n  const twoDimensionArray = [];\r\n  for (let i=0;i<boardSize;i++)\r\n  {\r\n    twoDimensionArray.push([]);\r\n    for(let j=0;j<boardSize;j++)\r\n    {\r\n      twoDimensionArray[i].push(squares[boardSize*i+j]);\r\n    }\r\n  }\r\n  const result = summary(twoDimensionArray,boardSize);\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nfunction summary(a,boardSize)\r\n{\r\n  let checked=null;\r\n  checked=checkRow(a,boardSize);\r\n  if (checked.IsWin) return checked;\r\n  checked=checkColumn(a,boardSize);  \r\n  if (checked.IsWin) return checked;\r\n  checked=checkAuxiliaryDiagonalLine(a,boardSize); \r\n  if (checked.IsWin) return checked;\r\n  checked=checkMainDiagonalLine(a,boardSize);\r\n  if (checked.IsWin) return checked;\r\n  checked=checkMainLowerDiagonalLine(a,boardSize);\r\n  if (checked.IsWin) return checked;\r\n  checked=checkMainUpperDiagonalLine(a,boardSize);\r\n  if (checked.IsWin) return checked;\r\n  checked=checkAuxiliaryUpperDiagonalLine(a,boardSize);\r\n  if (checked.IsWin) return checked;\r\n  checked=checkAuxiliaryLowerDiagonalLine(a,boardSize);\r\n  if (checked.IsWin) return checked;\r\n  return null;\r\n}\r\n\r\nfunction checkRow(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n  let pathX=[], pathO=[];\r\n\tfor(let i=0;i < boardSize;i++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\tfor(let j=0;j < boardSize;j++)\r\n\t\t{\t\r\n\t\t\tif(a[i][j]==='O'){\r\n\t\t\t\tcountO++;\r\n\t\t\t\tpathO.push([i,j]);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\telse\r\n\t\t\t{\t\r\n\t\t\t\tif(a[i][j]==='X')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countO>=5&&a[i][j-(countO+1)]!=='X')\r\n\t\t\t\t\t  countO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[i][j]===null)\r\n\t\t\t\t\t{if(countO>=5)\r\n\t\t\t\t\t  countO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif(a[i][j]==='X') {\r\n        countX++;\r\n        pathX.push([i,j]);\r\n      }\r\n\t\t\telse\r\n\t\t\t{\tif(a[i][j]==='O')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countX>=5&&a[i][j-(countX+1)]!=='O')\r\n\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\telse{\r\n            countX=0;\r\n            pathX=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[i][j]===null)\r\n\t\t\t\t\t{if(countX>=5)\r\n\t\t\t\t\t  countX=5;\r\n\t\t\t\t\telse{\r\n            countX=0;\r\n            pathX=[];\r\n          }}\r\n      }\r\n\t\t}\r\n\t\tif(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n}\r\n\r\nfunction checkColumn(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n  let pathO=[], pathX=[];\r\n\tfor(let j=0;j< boardSize;j++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\tfor(let i=0;i< boardSize;i++)\r\n\t\t\t\r\n\t\t{\r\n\t\t\tif(a[i][j]==='O'){\r\n        countO++;\r\n        pathO.push([i,j]);\r\n      }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]==='X')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countO>=5&&a[i-(countO+1)][j]!=='X')\r\n\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[i][j]===null)\r\n\t\t\t\t\t{if(countO>=5)\r\n\t\t\t\t\t  countO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }}\r\n\t\t\t}\r\n\r\n\t\t\tif(a[i][j]==='X'){\r\n        countX++;\r\n        pathX.push([i,j]);\r\n      }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]==='O')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countX>=5&&a[i-countX+1][j]!=='O')\r\n\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\telse{\r\n            countX=0;\r\n            pathX=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[i][j]===null)\r\n\t\t\t\t\t{if(countX>=5)\r\n\t\t\t\t\t  countX=5;\r\n          else{\r\n            countX=0;\r\n            pathX=[];\r\n          }}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathX:pathX, pathO:pathO});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathX:pathX, pathO:pathO});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n\r\n}\r\n\r\nfunction checkMainUpperDiagonalLine(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n  let pathO=[], pathX=[];\r\n\tfor(let j=1;j< boardSize;j++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\t\r\n\t\tlet k=j;\r\n\t\tlet i=0;\r\n\t\twhile(k< boardSize)\r\n\t\t{\r\n\t\t\tif(a[i][k]==='O'){\r\n        countO++;\r\n        pathO.push([i,k]);\r\n      }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a[i][k]==='X')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countO>=5&&a[i-countO+1][k-countO+1]!=='X')\r\n\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[i][k]===null)\r\n\t\t\t\t\t{if(countO>=5)\r\n\t\t\t\t\t  countO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }}\r\n\t\t\t}\r\n\t\t\tif(a[i][k]==='X'){\r\n        countX++;\r\n        pathX.push([i,k]);\r\n      }\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[i][k]==='O')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(countX>=5&&a[i-countX+1][k-countX+1]!=='O')\r\n\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\telse{\r\n              countX=0;\r\n              pathX=[];\r\n            }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(a[i][k]===null)\r\n\t\t\t\t\t\t{if(countX>=5)\r\n\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\telse{\r\n            countX=0;\r\n            pathX=[];\r\n          }}\r\n\t\t\t\t}\r\n\t\t\t\t\tk++;\r\n\t\t\t\t\ti++;\r\n\t\t}\r\n    if(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n}\r\n\r\nfunction checkAuxiliaryLowerDiagonalLine(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n\tlet j=0,k=0;\r\n  let pathO=[], pathX=[];\r\n\tfor(let i=1;i< boardSize;i++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\t\r\n\t\tk=i;\r\n\t\tj=boardSize-1;\r\n\t\twhile(k< boardSize)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif(a[k][j]==='O')\r\n\t\t\t{\t\r\n        countO++;\r\n        pathO.push([k,j]);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a[k][j]==='X')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countO>=5&&a[k-countO+1][j+countO+1]!=='X')\r\n\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[k][j]===null)\r\n\t\t\t\t\t{if(countO>=5)\r\n\t\t\t\t\t  countO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }}\r\n\t\t\t}\r\n\t\t\tif(a[k][j]==='X'){\r\n        countX++;\r\n        pathX.push([k,j]);\r\n      }\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[k][j]==='O')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(countX>=5&&a[k-countX+1][j+countX+1]==='O')\r\n\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\telse{\r\n              countX=0;\r\n              pathX=[];\r\n            }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(a[k][j]===null)\r\n\t\t\t\t\t\t{if(countX>=5)\r\n\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\telse{\r\n              countX=0;\r\n              pathX=[];\r\n            }}\r\n\t\t\t\t}\r\n\t\t\t\t\tk++;\r\n\t\t\t\t\tj--;\r\n\t\t\t\t\r\n\t\t}\r\n\t\tif(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n}\r\n\r\nfunction checkMainLowerDiagonalLine(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n\tlet j=0,k=0;\r\n  let pathO=[], pathX=[];\r\n  for(let i=1;i< boardSize;i++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\t\r\n\t\tk=i;\r\n\t\tj=0;\r\n\t\twhile(k< boardSize)\r\n\t\t{\r\n\t\t\tif(a[k][j]==='O'){\r\n        countO++;\r\n        pathO.push([k,j]);\r\n      }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a[k][j]==='X')\r\n\t\t\t\t{\tif(countO>=5&&a[k-countO+1][j-countO+1]!=='X')\r\n\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[k][j]===null)\r\n\t\t\t\t\t{if(countO>=5)\r\n\t\t\t\t\tcountO=5;\r\n\t\t\t\telse{\r\n          countO=0;\r\n          pathO=[];\r\n        }}\r\n\t\t\t}\r\n\t\t\tif(a[k][j]==='X'){\r\n        countX++;\r\n        pathX.push([k,j]);\r\n      }\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[k][j]==='O')\r\n\t\t\t\t\t\tif(countX>=5&&a[k-countX+1][j-countX+1]!=='O')\r\n\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\telse{\r\n              countX=0;\r\n              pathX=[];\r\n            }\r\n\t\t\t\t\tif(a[k][j]===null)\r\n\t\t\t\t\t\t{if(countX>=5)\r\n\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\telse{\r\n              countX=0;\r\n              pathX=[];\r\n            }}\r\n\t\t\t\t}\r\n\t\t\t\t\tk++;\r\n\t\t\t\t\tj++;\r\n\t\t}\r\n\t\tif(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n}\r\n\r\nfunction checkAuxiliaryUpperDiagonalLine(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n\tlet i=0,k=0;\r\n  let pathO=[], pathX=[];\r\n  for(let j=1;j< boardSize;j++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\t\r\n\t\tk=j;\r\n\t\ti=0;\r\n\t\twhile(k>0)\r\n\t\t{\r\n\t\t\tif(a[i][k]==='O'){\r\n        countO++;\r\n        pathO.push([i,k]);\r\n      }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a[i][k]==='X')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(countO>=5&&a[i-countO+1][k+countO+1]!=='X')\r\n\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }\r\n\t\t\t\t}\r\n\t\t\t\tif(a[i][k]===null)\r\n\t\t\t\t{\tif(countO>=5)\r\n\t\t\t\t\t  countO=5;\r\n          else{\r\n            countO=0;\r\n            pathO=[];\r\n          }}\r\n\t\t\t}\r\n\t\t\tif(a[i][k]==='X'){\r\n\t\t\t\tcountX++;\r\n\t\t\t\tpathX.push([i,k]);\r\n\t\t\t  }\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[i][k]==='O')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(countX>=5&&a[i-countX+1][k+countX+1]!=='O')\r\n\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\telse{\r\n              countX=0;\r\n              pathX=[];\r\n            }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(a[i][k]===null )\r\n\t\t\t\t\t\t{if(countX>=5)\r\n              countX=5;\r\n            else{\r\n              countX=0;\r\n              pathX=[];\r\n            }}\r\n\t\t\t\t}\r\n\t\t\t\t\tk--;\r\n\t\t\t\t\ti++;\r\n\t\t}\r\n\t\tif(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n}\r\n \r\nfunction checkMainDiagonalLine(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n  let pathO=[], pathX=[];\r\n  for(let i=0;i< boardSize;i++)\r\n\t{\r\n\t\tcountO=0;\r\n\t\tcountX=0;\r\n\t\tif(a[i][i]==='X'){\r\n      countX++;\r\n      pathX.push([i,i]);\r\n    }\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(a[i][i]==='O')\r\n\t\t\t{\r\n\t\t\t\tif(countX>=5&&a[i-countX+1][i-countX+1]!=='O')\r\n\t\t\t\t\tcountX=5;\r\n\t\t\t\telse{\r\n          countX=0;\r\n          pathX=[];\r\n        }\r\n\t\t\t}\r\n\t\t\tif(a[i][i]===null)\r\n\t\t\t\t{if(countX>=5)\r\n\t\t\t\tcountX=5;\r\n        else{\r\n          countX=0;\r\n          pathX=[];\r\n        }}\r\n\t\t}\r\n\t\tif(a[i][i]==='O'){\r\n      countO++;\r\n      pathO.push([i,i]);\r\n    }\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(a[i][i]==='X')\r\n\t\t\t{\r\n\t\t\t\tif(countO>=5&&a[i-countO+1][i-countO+1]!=='X')\r\n\t\t\t\t\tcountO=5;\r\n\t\t\t\telse{\r\n          countO=0;\r\n          pathO=[];\r\n        }\r\n\t\t\t}\r\n\t\t\tif(a[i][i]===null)\r\n\t\t\t\t{if(countO>=5)\r\n\t\t\t\tcountO=5;\r\n        else{\r\n          countO=0;\r\n          pathO=[];\r\n        }}\r\n\t\t}\r\n\t}\r\n  if(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n    return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n  }\r\n\r\n\r\n\r\nfunction checkAuxiliaryDiagonalLine(a,boardSize)\r\n{\r\n  let countO=0,countX=0;\r\n  let pathO=[], pathX=[];\r\n  for(let i=0;i< boardSize;i++)\r\n\t{\r\n\t\tcountX=0;\r\n\t\tcountO=0;\r\n\t\tfor(let j=0;j< boardSize;j++)\r\n\t\t{\r\n\t\t\tif(i+j===boardSize-1)\r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]==='O'){\r\n          countO++;\r\n          pathO.push([i,j]);\r\n        }\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[i][j]==='X')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(countO>=5&&a[i-countO+1][j+countO+1]!=='X')\r\n\t\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\t\telse{\r\n              countO=0;\r\n              pathO=[];\r\n            }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(a[i][j]===null)\r\n\t\t\t\t\t{if(countO>=5)\r\n\t\t\t\t\t\tcountO=5;\r\n\t\t\t\t\telse{\r\n            countO=0;\r\n            pathO=[];\r\n          }}\r\n\t\t\t\t}\r\n\t\t\t\t\tif(a[i][j]==='X'){\r\n            countX++;\r\n            pathX.push([i,j]);\r\n          }\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(a[i][j]==='O')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(countX>=5&&a[i-countX+1][j+countX+1]!=='O')\r\n\t\t\t\t\t\t\t\tcountX=5;\r\n\t\t\t\t\t\t\telse{\r\n                countX=0;\r\n                pathX=[];\r\n              }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(a[i][j]===null)\r\n\t\t\t\t\t\t\t{if(countX>=5)\r\n\t\t\t\t\t\t\t  countX=5;\r\n              else{\r\n                countX=0;\r\n                pathX=[];\r\n              }}\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(countO>=5)\r\n\t\t{\r\n\t\t\treturn({IsWin:true, winner:'0',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t\tif(countX>=5)\r\n\t\t{\r\n      return({IsWin:true, winner:'X',pathO:pathO,pathX:pathX});\r\n\t\t}\r\n\t}\r\n  return({IsWin:false, winner:null,pathO:[],pathX:[]});\r\n}\r\n\r\n","import Game from './components/game';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Game/>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}