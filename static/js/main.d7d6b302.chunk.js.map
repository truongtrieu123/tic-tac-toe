{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","isHighlight","fontWeight","color","value","Board","renderBoard","stepsCausedWin","calculateStepsCausedWin","squares","detail","i","row","j","includes","push","renderSquare","this","React","Component","HistoryList","handleCurrentMoveClick","move","handleSliderButtonClick","event","sliderButtonClick","state","history","stepNumber","isAscendingOrder","moves","map","step","index","location","isNaN","findLocation","col","desc","orderedMoves","reverse","type","name","checked","reversed","Game","jumpTo","setState","xIsNext","handleOrderSlider","target","Array","fill","slice","length","calculateWinner","concat","status","current","winner","result","isWin","isDraw","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7d6b302.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick} style={props.isHighlight?{fontWeight:'bold',color:'red'}:{}}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i, isHighlight) {\n    return (\n      <Square isHighlight={isHighlight} key={'square '+i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  renderBoard=()=>{\n    const stepsCausedWin=calculateStepsCausedWin(this.props.squares);\n    let detail=[];\n    for(var i =0;i<3;i++)\n    {\n      let row=[];\n      for(var j=0;j<3;j++)\n      {\n        const isHighlight=(stepsCausedWin.includes(3*i+j))? true: false;\n        row.push(this.renderSquare(3*i+j,isHighlight));\n      }\n      detail.push(<div className=\"board-row\">{row}</div>);\n    }\n    return detail;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBoard()}\n      </div>\n    );\n  }\n}\nclass HistoryList extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state={};\n  }\n\n  handleCurrentMoveClick=(move)=>\n  {\n    this.props.onClick(move);\n  }\n\n  handleSliderButtonClick=(event)=>\n  {\n    this.props.sliderButtonClick(event);\n  }\n\n  render()\n  {\n    const history = this.props.history;\n    const stepNumber=this.props.stepNumber;\n    const isAscendingOrder=this.props.isAscendingOrder;\n    const moves = history.map((step, move) => {\n      const [row,col]=findLocation(step.index);\n      const desc = move ?\n        'Go to move #' + move +'('+row+','+col+')':\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button style={stepNumber===move?{fontWeight:'bold'}:{}} onClick={()=> this.handleCurrentMoveClick(move)}>{desc}</button>\n        </li>\n      );\n    });\n    const orderedMoves= !isAscendingOrder?moves.reverse():moves;\n\n    return(\n      <div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" name=\"orderSlider\" onClick={event=>this.handleSliderButtonClick(event)} checked={this.props.isAscendingOrder}/>\n          <span className=\"slider\"></span>\n        </label>\n        <label><br/>Order (Ascending by default)</label>\n        <ol reversed={!isAscendingOrder}>{orderedMoves}</ol>\n      </div>\n    );\n  }\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAscendingOrder: true,\n      history: [\n        {\n          squares: Array(9).fill(null),\n          index:-1\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n    \n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          index:i\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo= (step) =>{\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });   \n  }\n\n  handleOrderSlider=(event)=>\n  {\n    this.setState({isAscendingOrder: event.target.checked});\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const stepNumber=this.state.stepNumber;\n    const isAscendingOrder=this.state.isAscendingOrder;\n    const winner = calculateWinner(current.squares);\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    let result='';\n    if(isDraw(current.squares)){\n      result='Draw!!';\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board key={'grame-board '+stepNumber}\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>{result}</div>\n          <HistoryList history={history} \n                      isAscendingOrder={isAscendingOrder} \n                      stepNumber={stepNumber} \n                      onClick={this.jumpTo} \n                      sliderButtonClick={this.handleOrderSlider}/>\n        </div>\n        \n      </div>\n      \n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction findLocation(index)\n{\n  const location=[[1,1],[1,2],[1,3],[2,1],[2,2],[2,3],[3,1],[3,2],[3,3]];\n\n  if(index===-1||isNaN(index))\n    return [-1,-1];\n  return location[index];\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction calculateStepsCausedWin(squares)\n{\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a,b,c];\n    }\n  }\n  return [];\n}\n\nfunction isDraw(squares)\n{\n  const isWin=calculateWinner(squares)!==null?true:false;\n  return !(squares.includes(null) || isWin);\n}"],"sourceRoot":""}